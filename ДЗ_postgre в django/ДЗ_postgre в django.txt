

1) Старт работы с PostgreSQL. Скачайте и установите официальный пакет pgsql для
вашей ОС. Установите PGadmin и подключитесь к локальному серверу, создайте новую
базу данных и прикрепите скриншот выполненного задания.

Результат во вложенном файле - Скрин1

2) В своем Django проекте установите драйвер psycopg2 для работы с базой PGSQL
используя менеджер пакетов pip. В файле настроек проекта выполните подключение к
базе данных:
DATABASES = {
'default': {
'ENGINE': 'django.db.backends.postgresql',
'NAME': 'имя_базы_данных',
'USER': 'имя_пользователя',
'PASSWORD': 'пароль',
'HOST': '127.0.0.1',
'PORT': '5432',
}
}

Создайте и выполните миграции используя makemigrations и migrate. Проверьте
подключение, в базе данных должны создаться технические таблицы Django проекта.

Результат во вложенном файле - Скрин2

3) Перенесите любую созданную ранее модель базы данных в PGSQL. Используйте
Джанго модели и миграции.

Результат во вложенном файле - Скрин3

 Создайте несколько таблиц через конструктор PGadmin

Результат во вложенном файле - Скрин4

и свяжите их с Джанго проектом, создав необходимые модели.

Результат во вложенном файле - Скрин5


4) Используйте Django ORM для тестирования запросов в вашу базу данных.
Выполните команду Python manage.py shell. Импортируйте необходимые модели из вашей
базы данных и создайте не менее 4 запросов, например:
Запрос на получение всех объектов базы данных и конкретного по id.
Запрос на фильтрацию
Запрос на добавление или удаление объекта

Запрос на подсчет количества объектов(len()), можно комбинировать с
фильтрацией.


Блок, скопированный из териминала:

>>> from app1.models import PgTabl1 
>>> pg = PgTabl1.objects
>>> pg
<django.db.models.manager.Manager object at 0x00000176242ACAD0>
>>> a = pg.filtr(id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Manager' object has no attribute 'filtr'. Did you mean: 'filter'?
>>> a = pg.filtr(id='1') 
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Manager' object has no attribute 'filtr'. Did you mean: 'filter'?
>>> a = pg.filter(id='1') 
>>> a
<QuerySet [<PgTabl1: PgTabl1 object (1)>]>
>>> a[0]
<PgTabl1: PgTabl1 object (1)>
>>> a[0].name
'Проверочная строка'
>>>